#include "mpi.h"    // подклчение библиотеки для работы с библиотекой параллельных расчетов mpi
#include <stdio.h>  // подклчение библиотеки для работы с языком си

int main(int argc,char *argv[])     // функция main - точка входа программы, должна присутствовать обязательно
{                                   // int argc - кол-во ключей (например, mpirun –np 8 1_1.exe => ключи: '-np' и '8')
                                    // char *argv[] - ключи получаемые при запуске через командную строку


    int my_id, numprocs;    // переменные: my_id - номер текущего процесса и numprocs - кол-во процесов всего
                            // создаются для всех процессов

	MPI_Init(&argc, &argv); // начало параллельной части, дальше код выполняется параллельно

	MPI_Comm_size(MPI_COMM_WORLD, &numprocs);   // получение числа процессов всего
	MPI_Comm_rank(MPI_COMM_WORLD, &my_id);	    // получение своего номера для каждого процесса
    fprintf(stdout,"Process %d of %d\n", my_id, numprocs);  // вывод текста на экран для каждого процесса

    MPI_Finalize();     // завершение параллельной части

    // код дальше снова выполнялся бы последовательно

    return 0;   // программа завершается с кодом 0
                // она бы завершилась и так, но с помощью return мы можем выйти из функции main раньше времени
                // например, если условие неверное, можно написать return -1 и завершить программу
                // принято, что return 0 - успешное выполнение программы, return -1  -  завершение с ошибкой
                // номер может быть любым и нужен для отладки
}

/*
    В этой программе мы просто выводим сообщение с каждого процесса
*/